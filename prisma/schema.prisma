// Prisma schema for NextAuth

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                     BigInt   @id @default(autoincrement())
  name                   String?
  email                  String?  @unique
  passwordHash           String?  @map("password_hash")
  role                   String   @default("user")
  emailVerified          DateTime? @map("email_verified")
  emailVerificationToken String?  @map("email_verification_token")
  image                  String?
  createdAt              DateTime @default(now()) @map("created_at")
  accounts               Account[]
  sessions               Session[]

  @@map("users")
}

model Account {
  id                String   @id @default(cuid())
  userId            BigInt   @map("user_id")
  type              String
  provider          String
  providerAccountId String   @map("provider_account_id")
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       BigInt   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String @unique
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}
